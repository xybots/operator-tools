// +build !ignore_autogenerated

// Copyright Â© 2020 Banzai Cloud
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package resources

import ()

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8SResourceOverlay) DeepCopyInto(out *K8SResourceOverlay) {
	*out = *in
	if in.GVK != nil {
		in, out := &in.GVK, &out.GVK
		*out = new(GroupVersionKind)
		**out = **in
	}
	out.ObjectKey = in.ObjectKey
	if in.Patches != nil {
		in, out := &in.Patches, &out.Patches
		*out = make([]K8SResourceOverlayPatch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8SResourceOverlay.
func (in *K8SResourceOverlay) DeepCopy() *K8SResourceOverlay {
	if in == nil {
		return nil
	}
	out := new(K8SResourceOverlay)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *K8SResourceOverlayPatch) DeepCopyInto(out *K8SResourceOverlayPatch) {
	*out = *in
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new K8SResourceOverlayPatch.
func (in *K8SResourceOverlayPatch) DeepCopy() *K8SResourceOverlayPatch {
	if in == nil {
		return nil
	}
	out := new(K8SResourceOverlayPatch)
	in.DeepCopyInto(out)
	return out
}
